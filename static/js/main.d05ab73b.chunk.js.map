{"version":3,"sources":["WebcamDetection.js","DetectionPage.js","App.js","serviceWorker.js","index.js"],"names":["WebcamDetection","props","intervalID","videoTag","React","createRef","textRef","Promise","all","faceapi","tinyFaceDetector","loadFromUri","process","then","printLoaded","console","log","navigator","mediaDevices","getUserMedia","video","frameRate","max","audio","stream","current","srcObject","catch","error","this","addEventListener","alert","clearInterval","e","setInterval","a","async","detections","innerText","length","ref","autoPlay","Component","DetectionPage","classes","makeStyles","theme","holder","display","flexWrap","paperTest","padding","spacing","margin","overflow","minWidth","float","topDivider","useStyles","className","Paper","Typography","variant","noWrap","Divider","root","menuButton","marginRight","hide","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Page2","Page3","App","useState","open","setOpen","basename","AppBar","position","clsx","Toolbar","IconButton","edge","onClick","color","aria-label","id","Drawer","anchor","paper","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d05ab73b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nclass WebcamDetection extends Component {\r\n\r\n    intervalID = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoTag = React.createRef();\r\n        this.textRef = React.createRef();\r\n        const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n        Promise.all(\r\n            [\r\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL) //faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL)\r\n            ]\r\n        ).then(this.printLoaded())\r\n    }\r\n\r\n    printLoaded() {\r\n        console.log(\"Loaded\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\r\n            navigator.mediaDevices\r\n            .getUserMedia({video: {frameRate: {max: 30}}, audio: false})\r\n            .then(stream=>this.videoTag.current.srcObject = stream)\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n            \r\n            //this.videoTag.current.width = 800;\r\n            //this.videoTag.current.height = 600;\r\n            this.videoTag.current.addEventListener('play', this)\r\n        } else {\r\n            alert('Camera not supported in your browser!')\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    handleEvent(e) {\r\n        //const displaySize = {width: this.videoTag.current.width, height: this.videoTag.current.height};\r\n        this.intervalID = setInterval(async () => {\r\n            const detections = await faceapi.detectAllFaces(this.videoTag.current, new faceapi.TinyFaceDetectorOptions()); //faceapi.SsdMobilenetv1Options()\r\n            this.textRef.current.innerText = \"found: \" + detections.length + \" faces\";\r\n            //const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video ref={this.videoTag} autoPlay/>\r\n                <p ref={this.textRef}>found: 0 faces</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WebcamDetection;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport WebcamDetection from './WebcamDetection';\r\n\r\nexport function DetectionPage () {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        holder: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        paperTest: {\r\n            padding: theme.spacing(2.5, 2.5, 2.5, 2.5),\r\n            margin: theme.spacing(0, 2, 2, 0),\r\n            overflow: 'auto',\r\n            minWidth: '20%',\r\n            float: 'left',\r\n        },\r\n        topDivider: {\r\n            margin: theme.spacing(1, 0, 2, 0),\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <div className=\"holder\">   \r\n            <Paper className={classes.paperTest}>\r\n                <Typography variant=\"h5\" noWrap>Live Face Detection</Typography>\r\n                <Divider className ={classes.topDivider}/>\r\n                <WebcamDetection/>\r\n            </Paper>\r\n        </div>\r\n        \r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { DetectionPage } from './DetectionPage';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth, \n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n      setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n      setOpen(false);\n  };\n\n  return (\n    <div className=\"root\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n        })}>\n            <Toolbar>\n            <IconButton edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)} onClick={handleDrawerOpen} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon/>\n            </IconButton>\n            <Typography id=\"pageTitle\" variant=\"h6\" noWrap>\n                Project\n            </Typography>\n            </Toolbar>\n        </AppBar>\n\n        <Drawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\n            <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n            </IconButton>\n            </div>\n            <Divider />\n            <List>\n              <ListItem button component={Link} to=\"/\">\n                <ListItemIcon><InboxIcon/></ListItemIcon>\n                <ListItemText primary=\"Home\"/>\n              </ListItem>\n              <ListItem button component={Link} to=\"/page2\">\n                <ListItemIcon><InboxIcon/></ListItemIcon>\n                <ListItemText primary=\"Page2\"/>\n              </ListItem>\n              <ListItem button component={Link} to=\"/page3\">\n                <ListItemIcon><InboxIcon/></ListItemIcon>\n                <ListItemText primary=\"Page3\"/>\n              </ListItem>\n            </List>\n        </Drawer>\n\n        <main className={clsx(classes.content, {\n            [classes.contentShift]: open,\n        })}>\n            <div className={classes.drawerHeader}/>\n            <div> {/* CONTENT PAGES HERE */}\n              <Switch>\n                <Route exact path=\"/\">\n                  <DetectionPage/>\n                </Route>\n                <Route path=\"/page2\">\n                  <Page2/>\n                </Route>\n                <Route path=\"/page3\">\n                  <Page3/>\n                </Route>\n              </Switch>\n            </div>\n            \n        </main>\n      </Router>\n    </div>\n  );\n}\n\nfunction Page2() {\n  return (\n    <div>page 2</div>\n  );\n}\n\nfunction Page3() {\n  return (\n    <div>page 3</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}