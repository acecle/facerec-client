{"version":3,"sources":["WebcamDetection.js","DetectionPage.js","UploadDetection.js","UploadPage.js","App.js","serviceWorker.js","index.js"],"names":["WebcamDetection","props","intervalID","videoWidth","videoHeight","code","videoTag","React","createRef","textRef","imageTag","faceTextRef","Promise","all","faceapi","tinyFaceDetector","loadFromUri","process","then","printLoaded","variable","prompt","this","navigator","mediaDevices","getUserMedia","video","width","height","frameRate","max","facingMode","audio","stream","current","srcObject","catch","error","console","addEventListener","alert","clearInterval","e","displaySize","setInterval","a","async","detections","innerText","length","resizedDetections","box","_box","regionsToExtract","left","top","canvases","imageData","toDataURL","src","sendImageToServer","blobData","dataURItoBlob","file","File","bodyFormData","FormData","name","Date","toLocaleString","append","axios","method","url","data","headers","response","log","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","Blob","type","ref","autoPlay","alt","hidden","Component","DetectionPage","classes","makeStyles","theme","holder","display","flexWrap","paperTest","padding","spacing","margin","overflow","minWidth","float","topDivider","useStyles","className","Paper","Typography","variant","noWrap","Divider","UploadDetection","currentImage","submit","preventDefault","state","isPlaying","picture","pause","setState","canvas","document","createElement","getContext","drawImage","play","textTag","outputTag","onClick","UploadPage","root","menuButton","marginRight","hide","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","useState","open","setOpen","basename","AppBar","position","clsx","Toolbar","IconButton","edge","color","aria-label","id","Drawer","anchor","paper","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cd51359.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\nimport axios from 'axios';\r\n\r\nclass WebcamDetection extends Component {\r\n\r\n    intervalID = 0;\r\n    videoWidth = 400;\r\n    videoHeight = 400;\r\n\r\n    code = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoTag = React.createRef();\r\n        this.textRef = React.createRef();\r\n        this.imageTag = React.createRef();\r\n        this.faceTextRef = React.createRef();\r\n\r\n        const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n        Promise.all(\r\n            [\r\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL) //faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL)\r\n            ]\r\n        ).then(this.printLoaded())\r\n    }\r\n\r\n    printLoaded() {\r\n        //load loading icon on start\r\n        //remove loading icon\r\n    }\r\n\r\n    componentDidMount() {\r\n        let variable = prompt(\"Enter your code: \");\r\n        this.code = variable;\r\n\r\n        if(!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\r\n            navigator.mediaDevices\r\n            .getUserMedia({video: {width: this.videoWidth, height: this.videoHeight, frameRate: {max: 30}, facingMode: \"user\"}, audio: false})\r\n            .then(stream=>this.videoTag.current.srcObject = stream)\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n            \r\n            this.videoTag.current.width = this.videoWidth;\r\n            this.videoTag.current.height = this.videoHeight;\r\n            this.videoTag.current.addEventListener('play', this)\r\n        } else {\r\n            alert('Camera not supported in your browser!')\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    handleEvent(e) {\r\n        const displaySize = {width: this.videoTag.current.width, height: this.videoTag.current.height};\r\n        this.intervalID = setInterval(async () => {\r\n            const detections = await faceapi.detectAllFaces(this.videoTag.current, new faceapi.TinyFaceDetectorOptions()); //faceapi.SsdMobilenetv1Options()\r\n            \r\n            try {\r\n                this.textRef.current.innerText = \"Found: \" + detections.length;\r\n            } catch (error) {\r\n                //TODO FIX THIS\r\n            }\r\n\r\n            if(detections.length > 0) {\r\n                const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n                const box = resizedDetections[0]._box;\r\n\r\n                const regionsToExtract = [\r\n                    new faceapi.Rect(box.left - 50, box.top - 50, box.width + 100, box.height + 100)\r\n                ]\r\n                const canvases = await faceapi.extractFaces(this.videoTag.current, regionsToExtract)\r\n                let imageData = canvases[0].toDataURL();\r\n                this.imageTag.current.src = imageData;\r\n\r\n                this.sendImageToServer(imageData);\r\n            }\r\n        }, 500)\r\n    }\r\n\r\n    sendImageToServer(imageData) {\r\n        let blobData = this.dataURItoBlob(imageData);\r\n        let file = new File([blobData], \"image.png\")\r\n\r\n        let bodyFormData = new FormData();\r\n        let name = new Date().toLocaleString() + \".png\";\r\n        bodyFormData.append('file', file, name);\r\n        bodyFormData.append(\"expected\", this.code);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:5000', //https://acecle-facerec-test-server.herokuapp.com/\r\n            data: bodyFormData,\r\n            headers: {\r\n                'Content-Type': File\r\n            }\r\n        }).then((response) => {\r\n            if(this.code == response.data) {\r\n                this.faceTextRef.current.innerText = \"Found \" + response.data + \", Face Recognised!\";\r\n            } else {\r\n                this.faceTextRef.current.innerText = \"Found \" + response.data + \", Face Incorrectly Recognised\";\r\n            }\r\n            \r\n        }).catch((response) => {\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    dataURItoBlob(dataURI) { //https://gist.github.com/poeticninja/0e4352bc80bc34fad6f7\r\n\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var byteString;\r\n        if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n            byteString = atob(dataURI.split(',')[1]);\r\n        else\r\n            byteString = unescape(dataURI.split(',')[1]);\r\n        // separate out the mime component\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        // write the bytes of the string to a typed array\r\n        var ia = new Uint8Array(byteString.length);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        return new Blob([ia], {type:mimeString});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video ref={this.videoTag} autoPlay/>\r\n                <p ref={this.textRef}>Found: 0</p>\r\n                <img ref={this.imageTag} alt=\"face\" hidden></img>\r\n                <p ref={this.faceTextRef}>Unknown Face</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WebcamDetection;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport WebcamDetection from './WebcamDetection';\r\n\r\nexport function DetectionPage () {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        holder: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        paperTest: {\r\n            padding: theme.spacing(2.5, 2.5, 2.5, 2.5),\r\n            margin: theme.spacing(0, 2, 2, 0),\r\n            overflow: 'auto',\r\n            minWidth: '20%',\r\n            float: 'left',\r\n        },\r\n        topDivider: {\r\n            margin: theme.spacing(1, 0, 2, 0),\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <div className=\"holder\">   \r\n            <Paper className={classes.paperTest}>\r\n                <Typography variant=\"h5\" noWrap>Live Face Detection</Typography>\r\n                <Divider className ={classes.topDivider}/>\r\n                <WebcamDetection/>\r\n            </Paper>\r\n        </div>\r\n        \r\n    );\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass UploadDetection extends Component {\r\n\r\n    videoWidth = 400;\r\n    videoHeight = 400;\r\n    currentImage = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoTag = React.createRef();\r\n        this.textTag = React.createRef();\r\n        this.outputTag = React.createRef();\r\n        \r\n        this.state = {isPlaying: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\r\n            navigator.mediaDevices\r\n            .getUserMedia({video: {width: this.videoWidth, height: this.videoHeight, frameRate: {max: 30}, facingMode: \"user\"}, audio: false})\r\n            .then(stream=>this.videoTag.current.srcObject = stream)\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n            \r\n            this.videoTag.current.width = this.videoWidth;\r\n            this.videoTag.current.height = this.videoHeight;\r\n        } else {\r\n            alert('Camera not supported in your browser!')\r\n        }\r\n    }\r\n\r\n    sendImageToServer(imageData) {\r\n        let blobData = this.dataURItoBlob(imageData);\r\n        let file = new File([blobData], \"image.png\")\r\n\r\n        let bodyFormData = new FormData();\r\n        //let name = new Date().toLocaleString() + \".png\";\r\n        bodyFormData.append('file', file, \"value\"); //TODO: change value back to variable passed to function after tests complete\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:5000/upload', //https://acecle-facerec-test-server.herokuapp.com/upload\r\n            data: bodyFormData,\r\n            headers: {\r\n                'Content-Type': File\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            if(response.data !== \"False\") {\r\n                this.outputTag.current.innerText = \"Success! Your code is: \" + response.data;\r\n            } else {\r\n                this.outputTag.current.innerText = \"Failed to add user to the system, please try again!\";\r\n            }\r\n            \r\n        }).catch((response) => {\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    dataURItoBlob(dataURI) { //https://gist.github.com/poeticninja/0e4352bc80bc34fad6f7\r\n\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var byteString;\r\n        if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n            byteString = atob(dataURI.split(',')[1]);\r\n        else\r\n            byteString = unescape(dataURI.split(',')[1]);\r\n        // separate out the mime component\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        // write the bytes of the string to a typed array\r\n        var ia = new Uint8Array(byteString.length);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        return new Blob([ia], {type:mimeString});\r\n    }\r\n\r\n    submit = e => {\r\n        e.preventDefault();\r\n        // let value = this.textTag.value;\r\n        // console.log(value);\r\n\r\n        if(this.currentImage !== null && this.state.isPlaying === false) {\r\n            this.sendImageToServer(this.currentImage);\r\n        }\r\n        \r\n    }\r\n\r\n    picture = e => {\r\n        if(this.state.isPlaying) {\r\n            this.videoTag.current.pause();\r\n            this.setState({isPlaying: false});\r\n\r\n            let canvas = document.createElement('canvas');\r\n            canvas.width = this.videoWidth;\r\n            canvas.height = this.videoHeight;\r\n            let ctx = canvas.getContext('2d');\r\n            ctx.drawImage(this.videoTag.current, 0, 0, canvas.width, canvas.height);\r\n            let dataURI = canvas.toDataURL('image/png');\r\n            this.currentImage = dataURI;\r\n\r\n        } else {\r\n            this.videoTag.current.play();\r\n            this.setState({isPlaying: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const isPlaying = this.state.isPlaying;\r\n        return (\r\n            <div>\r\n                <video ref={this.videoTag} autoPlay/>\r\n                <br></br>\r\n                <button onClick={this.picture}>{isPlaying ? 'Take Picture' : 'Take Again'}</button>\r\n                <br/><br/>\r\n                {/* <input type=\"text\" ref={e => this.textTag = e} /> */}\r\n                <button onClick={this.submit}>Submit</button>\r\n                <p ref={this.outputTag}></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadDetection;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport UploadDetection from './UploadDetection';\r\n\r\nexport function UploadPage () {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        holder: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        paperTest: {\r\n            padding: theme.spacing(2.5, 2.5, 2.5, 2.5),\r\n            margin: theme.spacing(0, 2, 2, 0),\r\n            overflow: 'auto',\r\n            minWidth: '20%',\r\n            float: 'left',\r\n        },\r\n        topDivider: {\r\n            margin: theme.spacing(1, 0, 2, 0),\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <div className=\"holder\">   \r\n            <Paper className={classes.paperTest}>\r\n                <Typography variant=\"h5\" noWrap>Add User</Typography>\r\n                <Divider className ={classes.topDivider}/>\r\n                <UploadDetection/>\r\n            </Paper>\r\n        </div>\r\n        \r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { DetectionPage } from './DetectionPage';\r\nimport { UploadPage } from './UploadPage';\r\nimport { RecognitionPage } from './RecognitionPage';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth, \r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: drawerWidth,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n      setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <AppBar position=\"fixed\" className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n        })}>\r\n            <Toolbar>\r\n            <IconButton edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)} onClick={handleDrawerOpen} color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon/>\r\n            </IconButton>\r\n            <Typography id=\"pageTitle\" variant=\"h6\" noWrap>\r\n                Project\r\n            </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\r\n            <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n            </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n            <ListItem button component={Link} to=\"/\">\r\n                <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                <ListItemText primary=\"Add User\"/>\r\n              </ListItem>\r\n              <ListItem button component={Link} to=\"/page2\">\r\n                <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                <ListItemText primary=\"Face Recognition\"/>\r\n              </ListItem>\r\n              {/* <ListItem button component={Link} to=\"/page3\">\r\n                <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                <ListItemText primary=\"Page3\"/>\r\n              </ListItem> */}\r\n            </List>\r\n        </Drawer>\r\n\r\n        <main className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n        })}>\r\n            <div className={classes.drawerHeader}/>\r\n            <div> {/* CONTENT PAGES HERE */}\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <UploadPage/>\r\n                </Route>\r\n                <Route path=\"/page2\">\r\n                  <DetectionPage/>\r\n                </Route>\r\n                {/* <Route path=\"/page3\">\r\n                  <RecognitionPage/>\r\n                </Route> */}\r\n              </Switch>\r\n            </div>\r\n            \r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}